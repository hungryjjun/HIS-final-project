package kr.or.ddit.employee.vo;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.account.vo.AccountVO;
import kr.or.ddit.annual.vo.AnnualVO;
import kr.or.ddit.attendance.vo.AttendanceVO;
import kr.or.ddit.department.vo.DepartmentVO;
import kr.or.ddit.departmentboard.vo.DepartmentBoardVO;
import kr.or.ddit.document.vo.DocumentVO;
import kr.or.ddit.empCertificate.vo.EmpCertificateVO;
import kr.or.ddit.job.vo.JobVO;
import kr.or.ddit.position.vo.PositionVO;
import kr.or.ddit.rank.vo.RankVO;
import kr.or.ddit.role.vo.RoleVO;
import kr.or.ddit.schedule.vo.ScheduleVO;
import kr.or.ddit.team.vo.TeamVO;
import kr.or.ddit.validate.InsertGroup;
import kr.or.ddit.workstatus.vo.WorkstautsVO;
import lombok.Data;
/**
 * 
 * 
 * @author 이진우
 * @since 2025. 3. 12.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 12.     	이진우	          최초 생성
 *  2025. 3. 12.     	정태우	          List 및 VO 매핑
 *
 * </pre>
 */
import lombok.ToString;

@Data
public class EmployeeVO {
   
	@NotBlank(groups = InsertGroup.class)
	@Size(min = 3, max = 11)
	private String empId;
	private Long departmentId;
	private Long jobId;
	private Long positionId;
	private Long rankId;
	@NotBlank(groups = InsertGroup.class)
	private String name;
	@NotNull(message = "입사일자는 필수입니다.", groups = InsertGroup.class)
	private String hireDate;
	private Long salary;
	@Email
	private String email;
	@NotBlank
	private String address;
	@NotBlank
	private String addressDetail;
	private String finalLevel;
	private String phoneNumber;
	@Size(min = 6, max = 6, groups = InsertGroup.class)
	private String juminFront;
	@Size(min = 7, max = 7, groups = InsertGroup.class)
	private String juminBack;
	private String empStatus;
	

	private DepartmentVO department;
	private TeamVO team;
	private PositionVO position;
	private JobVO job;
	private RankVO rank;
	private AccountVO account;
	private WorkstautsVO Workstauts;
	private RoleVO role;
	
	private List<AttendanceVO> attendanceList;
	private List<EmpCertificateVO> empCertificate;
	private List<DocumentVO> document;
	private List<ScheduleVO> schedule;
	private List<AnnualVO> annual;
	private List<DepartmentBoardVO> departmentBoard;

	
	@ToString.Exclude
	private String empImg;
	
	@ToString.Exclude
	private MultipartFile empImage; 
	public void setEmpImage(MultipartFile empImage, String realPath) {
		if (empImage == null || empImage.isEmpty()) return;
		
		this.empImage = empImage;
		
		String uploadDir = realPath + "/resources/fileImages/employee";
		
		String originalFilename = empImage.getOriginalFilename();
		if (originalFilename != null) {
			// UUID를 이용해 중복되지 않는 파일명 생성
			String newFileName = UUID.randomUUID().toString() + "_" + originalFilename;
			File saveFile = new File(uploadDir, newFileName);
			
			try {
				// 디렉토리 없으면 생성
				File directory = new File(uploadDir);
				if (!directory.exists()) {
					directory.mkdirs();
				}
				
				// 파일 저장
				empImage.transferTo(saveFile);
				
				// DB에는 상대 경로 저장
				this.empImg = "/resources/fileImages/employee" + newFileName;
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}
