package kr.or.ddit.attendance.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.attendance.service.AttendanceService;
import kr.or.ddit.attendance.vo.AttendanceVO;
import kr.or.ddit.department.service.DepartmentService;
import kr.or.ddit.department.vo.DepartmentVO;
import kr.or.ddit.employee.service.EmployeeService;
import kr.or.ddit.team.vo.TeamVO;
import lombok.extern.slf4j.Slf4j;

/**
 * @author 정태우
 * @since 2025. 3. 12.
 * @see
 *
 * <pre>
 * << 개정이력(Modification Information) >>
 *   
 *   수정일      			수정자           수정내용
 *  -----------   	-------------    ---------------------------
 *  2025. 3. 12.     	정태우	          최초 생성
 *
 * </pre>
 */
@Controller
@Slf4j
public class AttendanceReadController {
	
	@Autowired
	AttendanceService service;
	
	@Autowired
	DepartmentService Dservice;
	
	@GetMapping("/attendance/list")
	public String AttendanceList(Model model) {
		model.addAttribute("departmentList",service.departmentList());
		model.addAttribute("teamList",service.teamList());
		model.addAttribute("attendanceList",service.attendanceList());
		model.addAttribute("todayAlive",Dservice.TodayAlive());
		return "tiles:attendance/attendanceList";
		
	}
	
	@GetMapping("/attendance/Detail")
	public String AttendanceDetail(
		   Model model
		, @RequestParam("empId") String empId
		, @RequestParam(value = "startDate", required = false) String startDate
		, @RequestParam(value = "endDate", required = false) String endDate
	){
		model.addAttribute("attendanceList",service.attendanceDetail(empId,startDate,endDate));
		model.addAttribute("employee",service.Employee(empId));
		return "tiles:attendance/attendanceDetail";
		
	}
	
	@GetMapping("/myAttendance")
	public String CheckList(Model model , @RequestParam("empId") String empId) {
		model.addAttribute("myAttendance",service.myAttendance(empId));
		return "tiles:attendance/myAttendance";
		
	}
	@GetMapping("/filter")
    @ResponseBody
    public  Map<String, Object> filterAttendance(
        @RequestParam(value = "departmentId", required = false) String departmentId,
        @RequestParam(value = "teamId", required = false) String teamId,
        @RequestParam(value = "date", required = false) String date
    ) {
		Map<String, Object> result = new HashMap<>();
		List<AttendanceVO> attendanceList = service.attendanceList(departmentId, teamId, date);
	    List<DepartmentVO> TodayAlive = Dservice.TodayAlive(date);
	    result.put("attendanceList", attendanceList);
	    result.put("TodayAlive", TodayAlive);
        return result;
    }
    
    
	@GetMapping("/check/Detail")
	public String CheckDetail(
		  Model model
		, @RequestParam("empId") String empId
		, @RequestParam(value = "startDate", required = false) String startDate
		, @RequestParam(value = "endDate", required = false) String endDate
	) {
		model.addAttribute("attendanceList",service.attendanceDetail(empId,startDate,endDate));
		model.addAttribute("employee",service.Employee(empId));
		return "tiles:attendance/checkInOutDetail";
	}
	
	@GetMapping("/content/update")
	@ResponseBody
	public Map<String, Object> updateAttendance(@RequestParam("empId")String empId) {
	    Map<String, Object> response = new HashMap<>();
	    response.put("response", service.updateAttendance(empId));
		return response;
	}
	
		
	
}
