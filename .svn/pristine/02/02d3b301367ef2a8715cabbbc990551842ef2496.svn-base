package kr.or.ddit.empappointments.controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.empappointments.service.AppointmentService;
import kr.or.ddit.empappointments.vo.AppointmentVO;
import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/employee/appointUpdate")
@RequiredArgsConstructor
public class AppointmentUpdateController {
	
	private final AppointmentService service;
	public static final String MODELNAME = "appointment";
	
	@GetMapping
	public String updateFormUI(
			@RequestParam("appwho") String appId
			, Model model ) {
		if(!model.containsAttribute(MODELNAME)) {
			AppointmentVO appointment =service.readAppoint(appId);
			model.addAttribute(MODELNAME, appointment);
		}
		
		return "tiles:employee/appointUpdate";
	}
	
	@PostMapping
	public String updateProcess(
		@ModelAttribute(MODELNAME) AppointmentVO appointment	
		, BindingResult errors
		, HttpSession session
		, RedirectAttributes redirectAttributes
	) {
		String logicalName = null;
		boolean valid = !errors.hasErrors();
		if(valid) {
			service.modifyAppoint(appointment);
			logicalName = "redirect:/employee/appointList";		
						  
		} else {
			redirectAttributes.addFlashAttribute(MODELNAME, appointment);
			String errorName = BindingResult.MODEL_KEY_PREFIX + MODELNAME;
			redirectAttributes.addFlashAttribute(errorName, errors);
			logicalName = "redirect:/employee/appointDetail?appWho="+appointment.getAppId();		
		}	
		return logicalName;
	}
	
}
