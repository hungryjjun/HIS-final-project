<?xml version="1.0" encoding="UTF-8"?>
<!-- * == 개정이력(Modification Information) == * * 수정일 수정자 수정내용 * ============
	============== ======================= * 2025. 3. 13. KHS 최초 생성 * -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mybatis.mappers.team.TeamMapper">

	<!-- ResultMap 정의 -->
	<resultMap id="teamMap" type="kr.or.ddit.team.vo.TeamVO" >
		<id property="teamId" column="TEAM_ID" />
		<result property="teamName" column="TEAM_NAME" />
		<result property="teamStatus" column="TEAM_STATUS" />
		<result property="departmentId" column="DEPARTMENT_ID" />

		<association property="department"
			javaType="kr.or.ddit.department.vo.DepartmentVO">
			<result property="departmentId" column="DEPARTMENT_ID" />
			<result property="departmentName" column="DEPARTMENT_NAME" />
		</association>
		<collection property="teamMembers" ofType="TeamMemberVO">
			<id property="tmId" column="TM_ID" />
			<result property="tmHr" column="TM_HR" />
			<result property="teamId" column="TEAM_ID" />
		</collection>

		<collection property="accounts"
			ofType="kr.or.ddit.account.vo.AccountVO" autoMapping="true">
		</collection>
	</resultMap>


	<!-- 팀 목록 가져오기 -->
	<select id="teamManageList" resultMap="teamMap">
		SELECT
		    DEPARTMENT_ID
		  , DEPARTMENT_NAME
		  , TEAM_ID
		  , TEAM_NAME
		  , TM_ID
		  , TEAM_STATUS
		  , TM_HR
		  , EMP_NAME
		FROM
		    (
		        SELECT
		            TM.TM_ID
		          , D.DEPARTMENT_ID
		          , D.DEPARTMENT_NAME
		          , T.TEAM_ID
		          , T.TEAM_NAME
		          , T.TEAM_STATUS
		          , TM.TM_HR
		          , CASE
		                  WHEN TM.TM_HR = '팀장' THEN
		                      A.EMP_NAME
		                  ELSE
		                      NULL
		              END AS EMP_NAME
		          , ROW_NUMBER()
		              OVER(PARTITION BY T.TEAM_ID
		                   ORDER BY
		                       CASE
		                           WHEN TM.TM_ID >= 1101
		                                AND TM.TM_HR = '팀장' THEN
		                               1
		                           WHEN TM.TM_ID >= 1101 THEN
		                               2
		                           WHEN TM.TM_HR = '팀장'  THEN
		                               3
		                           ELSE
		                               4
		                       END
		                     , TM.TM_ID ASC
		              )   AS RN
		        FROM
		            TEAM    T
		            LEFT JOIN TEAM_MEMBER TM ON T.TEAM_ID = TM.TEAM_ID
		            LEFT JOIN ACCOUNT     A ON A.TM_ID = TM.TM_ID
		            LEFT JOIN DEPARTMENT  D ON D.DEPARTMENT_ID = T.DEPARTMENT_ID
		    )
		WHERE
		    RN = 1
		ORDER BY
		    TEAM_ID ASC
	</select>

    <!-- 팀 상세 조회 -->
    <select id="selectTeam" resultMap="teamMap">
		    SELECT
		    T.TEAM_ID
		  , T.TEAM_NAME
		  , T.TEAM_STATUS
		  , TM.TM_ID
		  , TM.TM_HR
		  , A.EMP_NAME
		FROM
		    TEAM T
		    LEFT JOIN TEAM_MEMBER TM ON T.TEAM_ID = TM.TEAM_ID
		    LEFT JOIN ACCOUNT     A ON A.TM_ID = TM.TM_ID
		    LEFT JOIN DEPARTMENT  D ON D.DEPARTMENT_ID = T.DEPARTMENT_ID
		WHERE
		    T.TEAM_ID = #{teamId}
		    ORDER BY T . TEAM_ID ASC

    </select>

	<!-- 팀 항목 추가 -->
	<insert id="insertTeamItem"
		parameterType="kr.or.ddit.team.vo.TeamVO">
		INSERT INTO TEAM (
		TEAM_ID
		, DEPARTMENT_ID
		, TEAM_NAME
		, TEAM_EMP
		, TEAM_HR
		, TEAM_STATUS
		) VALUES (

		TEAM_seq.NEXTVAL
		, #{departmentId}
		, #{teamName}
		, #{teamEmp}
		, #{teamHr}
		, #{teamStatus}
		)
	</insert>

	<!-- 팀 항목 수정 -->
	<update id="updateTeamStatusItem">
		UPDATE TEAM
		SET TEAM_NAME = #{teamName}
		, TEAM_EMP = #{teamEmp}
		, TEAM_HR = #{teamHr}
		, TEAM_STATUS = #{teamStatus}
		WHERE TEAM_NAME = #{teamName}
	</update>

	<!-- 팀 항목 삭제 -->
	<delete id="deleteTeamItem">
		DELETE FROM TEAM
		WHERE TEAM_NAME = #{teamName}
	</delete>

</mapper>














