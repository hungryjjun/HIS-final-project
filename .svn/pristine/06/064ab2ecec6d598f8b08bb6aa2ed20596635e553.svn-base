package kr.or.ddit.salary.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.mybatis.mappers.salary.SalaryMapper;
import kr.or.ddit.salary.vo.AllowanceCodeVO;
import kr.or.ddit.salary.vo.AllowanceVO;
import kr.or.ddit.salary.vo.DeductionCodeVO;
import kr.or.ddit.salary.vo.DeductionVO;
import kr.or.ddit.salary.vo.SalaryVO;

@Service
public class SalaryServiceImpl implements SalaryService {

	@Autowired
	private SalaryMapper mapper;
	
	@Override
	public List<SalaryVO> salaryList() {
		return mapper.salaryList();
	}

	@Override
	public SalaryVO salarySelected(String empId,int payYear, int payMonth) {
		return mapper.salarySelected(empId,payYear,payMonth);
	}

	@Override
	public List<AllowanceCodeVO> AllowanceList() {
		return mapper.AllowanceList();
	}

	@Override
	public List<DeductionCodeVO> DeductionList() {
		return mapper.DeductionList();
	}

	@Override
	public boolean InsertSalary(int payYear, int payMonth) {
		return mapper.InsertSalary(payYear, payMonth)>0;
	}

	@Override
	public boolean InsertDeducation(int payYear, int payMonth) {
		return mapper.InsertDeducation(payYear,payMonth)>0;
	}

	@Override
	public SalaryVO salaryInfo() {
		return mapper.salaryInfo();
	}

	@Override
	public int InsertAllowance(int payYear, int payMonth) {
		return mapper.InsertAllowance(payYear, payMonth);
	}

	@Override
	public int deducationTotalUpdate(int payYear, int payMonth) {
		return mapper.deducationTotalUpdate(payYear, payMonth);
	}

	@Override
	public int allowanceTotalUpdate(int payYear, int payMonth) {
		return mapper.allowanceTotalUpdate(payYear, payMonth);
	}

	@Override
	public int salaryTotalAmountUpdate(int payYear, int payMonth) {
		return mapper.salaryTotalAmountUpdate(payYear, payMonth);
	}

	@Override
	public List<SalaryVO> SalarySummaryByMonth() {
		return mapper.SalarySummaryByMonth();
	}

	@Override
	public SalaryVO salaryInsertEx(int payYear, int payMonth) {
		return mapper.salaryInsertEx(payYear, payMonth);
	}

	@Override
	public int finalStatusUpdate(Long salaryId, String empId) {
		return mapper.finalStatusUpdate(salaryId, empId);
	}

	@Override
	public List<SalaryVO> departMentAvgSalry() {
		return mapper.departMentAvgSalry();
	}

	@Override
	public List<SalaryVO> rankAvgSalary() {
		return mapper.rankAvgSalary();
	}
}
