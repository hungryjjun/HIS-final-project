<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>팀 수정</title>
</head>
<body>

    <h2>팀 수정</h2>
    <form action="${pageContext.request.contextPath}/team/update/commit" method="post">
        <!-- 팀 ID는 수정하지 않으므로 hidden -->
        <input type="hidden" name="teamId" value="${team.teamId}" />

        <!-- 부서 정보: 드롭다운으로 모든 부서 목록을 출력 -->
        <div>
            <label>부서:</label>
            <select name="departmentId" required>
			    <c:forEach var="department" items="${departmentList}">
			        <option value="${department.departmentId}"
			            <c:if test="${department.departmentId eq team.department.departmentId}">
			                selected="selected"
			            </c:if>>
			            ${department.departmentName}
			        </option>
			    </c:forEach>
			</select>

        </div>

        <!-- 팀 이름 -->
        <div>
            <label>팀 이름:</label>
            <input type="text" name="teamName" value="${team.teamName}" required/>
        </div>



        <!-- 팀 멤버 정보 -->
        <h3>팀원 정보</h3>
        <div id="teamMembers">
		    <c:forEach var="member" items="${team.teamMembers}" varStatus="status">
		        <div class="teamMember">
		            <input type="hidden" name="tminfo_${status.index}_id" value="${member.tmId}" />
		            <input type="hidden" name="tminfo_${status.index}_teamId" value="${team.teamId}" />

		            <label>팀원 구분:</label>
		            <select name="teamMembers[${status.index}].tmHr" required>
		                <option value="팀장" ${member.tmHr eq '팀장' ? 'selected' : ''}>팀장</option>
		                <option value="팀원" ${member.tmHr eq '팀원' ? 'selected' : ''}>팀원</option>
		            </select>

		            <label>팀원 ID:</label>
		            <input type="text" value="${member.tmId}" readonly />
		            <button type="button">수정</button>
		            <button type="button">삭제</button>
		        </div>
		    </c:forEach>
		</div>

        <!-- 새로운 팀원 추가 버튼 -->
        <button type="button" id="btnAddMember" onclick="addTeamMember()">팀원 추가.</button>


    </form>
	${team.teamMembers }
<script>

	let memberIndex = ${fn:length(team.teamMembers)};

	function addMember() {

		const teamMembersDiv = document.getElementById('teamMembers');

	    // 새로운 팀원 컨테이너 생성
	    const newMemberDiv = document.createElement('div');
	    newMemberDiv.className = 'teamMember';

	    // 1. teamId hidden 필드
	    const teamIdInput = document.createElement('input');
	    teamIdInput.type = 'hidden';
	    teamIdInput.name = `tminfo_teamId`;
	    teamIdInput.id = `tminfo_teamId`;
	    teamIdInput.value = document.querySelector('input[name="teamId"]').value;
	    newMemberDiv.appendChild(teamIdInput);

	    // 2. tmId 입력 필드
	    const tmIdInput = document.createElement('input');
	    tmIdInput.type = 'text';
	    tmIdInput.name = `tminfo_id`; // 인덱스 강제 할당
	    tmIdInput.id = `tminfo_id`; // 인덱스 강제 할당
	    tmIdInput.required = true;
	    newMemberDiv.appendChild(tmIdInput);

	    // 3. tmHr 선택 필드
	    const tmHrSelect = document.createElement('select');
	    tmHrSelect.name = `tminfo_hr`; // 인덱스 강제 할당
	    tmHrSelect.id = `tminfo_hr`; // 인덱스 강제 할당
	    tmHrSelect.required = true;

	    const option1 = document.createElement('option');
	    option1.value = '팀장';
	    option1.textContent = '팀장';
	    tmHrSelect.appendChild(option1);

	    const option2 = document.createElement('option');
	    option2.value = '팀원';
	    option2.textContent = '팀원';
	    tmHrSelect.appendChild(option2);

	    newMemberDiv.appendChild(tmHrSelect);

	    // 4. 추가 버튼
	    const addTeamButton = document.createElement('button');
	    addTeamButton.type = 'button';
	    addTeamButton.textContent = '적용';
	    addTeamButton.onclick = function() {
			addTeamMember();
	    };
	    newMemberDiv.appendChild(addTeamButton);

	    // 팀원 목록에 추가
	    teamMembersDiv.appendChild(newMemberDiv);

	    // 인덱스 증가 (반드시 마지막에 해야 함)
	    memberIndex++;

	    $("#btnAddMember").hide();
	}



// 	function addTeamMember() {
//         $.ajax({
//             url: "/team/updateTeamMember",
//             type: "GET",
//             data: {

//             },
//             dataType: "json",
//             success: function(data) {
//                 console.log(data);
//             },
//             error: function() {
//                 alert("데이터를 불러오는 중 오류가 발생했습니다.");
//             }
//         });
// 	}

    // 팀원 추가를 서버에 보내는 함수
    function addTeamMember(index) {
        const tmId = document.querySelector(`input[name="tminfo_${index}_id"]`).value; // 새 팀원 ID
        const tmHr = document.querySelector(`select[name="teamMembers[${index}].tmHr"]`).value; // 팀원 구분
        const teamId = document.querySelector(`input[name="teamId"]`).value; // 팀 ID

        $.ajax({
            url: "/team/updateTeamMember",  // URL을 컨트롤러와 맞게 설정
            type: "GET",
            data: {
                tmId: tmId,  // tmId
                tmHr: tmHr,  // tmHr (팀장/팀원)
                teamId: teamId  // teamId (현재 팀 ID)
            },
            dataType: "json",
            success: function(data) {
                console.log(data);  // 서버로부터 받은 응답을 출력
                if (data.cnt === 1) {
                    alert("팀원 추가가 성공적으로 완료되었습니다.");
                    // 추가된 팀원 목록 업데이트 등의 후속 작업을 수행할 수 있습니다.
                } else {
                    alert("팀원 추가 중 오류가 발생했습니다.");
                }
            },
            error: function() {
                alert("데이터를 불러오는 중 오류가 발생했습니다.");
            }
        });
    }

	success: function(data) {
	    if (data.cnt === 1) {
	        alert("팀원 추가가 성공적으로 완료되었습니다.");
	        // 팀원 목록 업데이트 등의 후속 작업을 수행할 수 있습니다.
	    } else {
	        alert("팀원 추가 중 오류가 발생했습니다.");
	    }
	},


	function removeMember(button) {
	    const teamMemberDiv = button.closest('.teamMember');
	    teamMemberDiv.remove();
	}





</script>

</body>
