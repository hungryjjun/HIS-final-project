package kr.or.ddit.evaluation.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.ddit.evaluation.exception.DuplicateEvaluationCandidateException;
import kr.or.ddit.evaluation.vo.EvaluationCandidateVO;
import kr.or.ddit.mybatis.mappers.evaluation.EvaluationCandidateMapper;
import kr.or.ddit.rank.vo.RankVO;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class EvaluationCandidateServiceImpl implements EvaluationCandidateService {

    private final EvaluationCandidateMapper dao;

    // 전체 후보자 리스트 조회
    @Override
    public List<EvaluationCandidateVO> selectAll(String rank, String year, String half) {
        return dao.readCandidateList(rank, year, half);
    }

    // 여러 직원 정보를 업데이트
    @Transactional
    @Override
    public void updateAll(List<EvaluationCandidateVO> candidates) {
    	List<String> duplicateList = new ArrayList<>();

        for (EvaluationCandidateVO candidate : candidates) {
        	// null이면 건너뛰기
        	if (candidate.getEmpId() == null) continue; 
            
        	int exists = dao.existsCandidate(candidate);
            
        	if (exists == 0) {
                int result = dao.insertCandidate(candidate);
                if (result == 0) {
                    throw new RuntimeException("입력 실패: empId=" + candidate.getEmpId());
                }
            } else {
                // 중복 메시지 저장
                String message = String.format(
                    "%s (%s) 님은 %s년 %s 평가가 이미 등록되어 있습니다.",
                    candidate.getEmployee().getName(),
                    candidate.getEmpId(),
                    candidate.getEvaluationYear(),
                    candidate.getHalfYear()
                );
                duplicateList.add(message);
            }
        }

        // 중복된 경우 redirect에 담을 수 있도록 예외로 전달하거나 반환
        if (!duplicateList.isEmpty()) {
            throw new DuplicateEvaluationCandidateException(duplicateList);
        }
    }

	@Override
	public List<RankVO> readRankList() {
		// TODO Auto-generated method stub
		return null;
	}
}
