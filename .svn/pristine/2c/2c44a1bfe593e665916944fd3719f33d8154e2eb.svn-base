<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>팀 수정</title>
</head>
<body>

    <h2>팀 수정</h2>
    <form action="${pageContext.request.contextPath}/team/update/commit" method="post">
        <!-- 팀 ID는 수정하지 않으므로 hidden -->
        <input type="hidden" name="teamId" value="${team.teamId}" />

        <!-- 부서 정보: 드롭다운으로 모든 부서 목록을 출력 -->
        <div>
            <label>부서:</label>
            <select name="departmentId" required>
                <c:forEach var="department" items="${departmentList}">
                    <option value="${department.departmentId}"
                            ${department.departmentId == team.department.departmentId ? 'selected' : ''}>
                        ${department.departmentName}
                    </option>
                </c:forEach>
            </select>
        </div>

        <!-- 팀 이름 -->
        <div>
            <label>팀 이름:</label>
            <input type="text" name="teamName" value="${team.teamName}" required/>
        </div>

        <!-- 팀 멤버 정보 -->
        <h3>팀원 정보</h3>
        <div id="teamMembers">
		    <c:forEach var="member" items="${team.teamMembers}" varStatus="status">
		        <div class="teamMember">
		            <input type="hidden" name="teamMembers[${status.index}].tmId" value="${member.tmId}" />
		            <input type="hidden" name="teamMembers[${status.index}].teamId" value="${team.teamId}" />

		            <label>팀원 구분:</label>
		            <select name="teamMembers[${status.index}].tmHr" required>
		                <option value="팀장" ${member.tmHr eq '팀장' ? 'selected' : ''}>팀장</option>
		                <option value="팀원" ${member.tmHr eq '팀원' ? 'selected' : ''}>팀원</option>
		            </select>

		            <label>팀원 ID:</label>
		            <input type="text" value="${member.tmId}" readonly />
		        </div>
		    </c:forEach>
		</div>

        <!-- 새로운 팀원 추가 버튼 -->
        <button type="button" onclick="addMember()">팀원 추가</button>

        <button type="submit">수정</button>
    </form>
	${team.teamMembers }
<script>

	let memberIndex = ${fn:length(team.teamMembers)};

	function addMember() {
	    const teamMembersDiv = document.getElementById('teamMembers');

	    // 새로운 팀원 컨테이너 생성
	    const newMemberDiv = document.createElement('div');
	    newMemberDiv.className = 'teamMember';

	    // 1. teamId hidden 필드
	    const teamIdInput = document.createElement('input');
	    teamIdInput.type = 'hidden';
	    teamIdInput.name = `teamMembers[${memberIndex}].teamId`;
	    teamIdInput.value = document.querySelector('input[name="teamId"]').value;
	    newMemberDiv.appendChild(teamIdInput);

	    // 2. tmId 입력 필드
	    const tmIdInput = document.createElement('input');
	    tmIdInput.type = 'text';
	    tmIdInput.name = `teamMembers[${memberIndex}].tmId`; // 인덱스 강제 할당
	    tmIdInput.required = true;
	    newMemberDiv.appendChild(tmIdInput);

	    // 3. tmHr 선택 필드
	    const tmHrSelect = document.createElement('select');
	    tmHrSelect.name = `teamMembers[${memberIndex}].tmHr`; // 인덱스 강제 할당
	    tmHrSelect.required = true;

	    const option1 = document.createElement('option');
	    option1.value = '팀장';
	    option1.textContent = '팀장';
	    tmHrSelect.appendChild(option1);

	    const option2 = document.createElement('option');
	    option2.value = '팀원';
	    option2.textContent = '팀원';
	    tmHrSelect.appendChild(option2);

	    newMemberDiv.appendChild(tmHrSelect);

	    // 4. 삭제 버튼
	    const removeButton = document.createElement('button');
	    removeButton.type = 'button';
	    removeButton.textContent = '삭제';
	    removeButton.onclick = function() {
	        newMemberDiv.remove();
	    };
	    newMemberDiv.appendChild(removeButton);

	    // 팀원 목록에 추가
	    teamMembersDiv.appendChild(newMemberDiv);

	    // 인덱스 증가 (반드시 마지막에 해야 함)
	    memberIndex++;
	}




	function removeMember(button) {
	    const teamMemberDiv = button.closest('.teamMember');
	    teamMemberDiv.remove();
	}





</script>

</body>
