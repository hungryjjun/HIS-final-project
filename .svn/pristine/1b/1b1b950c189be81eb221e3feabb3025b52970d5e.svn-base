<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<style>
thead th {
    text-align: center !important;
}
.modal-title {
    color: white !important;
    flex-grow: 1; /* 제목이 가운데 정렬될 수 있도록 설정 */
    text-align: center;
}
.modal-header .btn-close {
    filter: invert(1); /* 아이콘 색 반전 (검정 → 흰색) */
    opacity: 1; /* 기본 부트스트랩 스타일보다 더 뚜렷하게 표시 */
}
.modal-body .list-group-item {
    border: none;  /* 테두리 제거 */
    padding: 10px 15px;
    background-color: #f9f9f9; /* 연한 배경색 */
    border-radius: 5px;
    margin-bottom: 5px;
}
.modal-body strong {
    display: inline-block;
    width: 120px; /* 라벨 너비 통일 */
    font-weight: bold;
    color: #333;
}
.radio-label {
        margin-right: 20px; /* 라디오 버튼 간격 조정 */
}
.modal.fade .modal-dialog {
    transition: transform 0.3s ease-out;
    transform: translateY(-10px);
}

.modal.show .modal-dialog {
    transform: translateY(0);
}
.status-container {
    display: flex;
    align-items: center;
    gap: 10px; /* 요소 간격 */
    margin-bottom: 25px;
}
.card {
    margin-bottom: 5px;
}
</style>
<h4>지원자 목록</h4>
${applicationList }
<section class="section">
	<div class="card">
		<div class="card-header">DB연동 O</div>
		<div class="card-body">
			<a href="${pageContext.request.contextPath }/recruit/board/list">
			    <button class="btn btn-primary">공고목록으로 이동</button>
			</a>
			<button type="button" class="btn btn-secondary" style="width:100px;" onclick="history.go(-1);">뒤로가기</button>
			<table class="table table-striped text-center" id="table1">
				<thead>
					<tr>
						<th>이름</th>
						<th>생년월일</th>
						<th>성별</th>
						<th>입사지원서</th>
						<th>평가상태</th>
					</tr>
				</thead>
				<tbody>
					<c:choose>
						<c:when test="${not empty applicationList }">
							<c:forEach items="${applicationList }" var="application">
								<tr>
									<td>${application.appName }</td>
									<td>
										${fn:substring(application.appYeardate, 0, 4)}-${fn:substring(application.appYeardate, 4, 6)}-${fn:substring(application.appYeardate, 6, 8)}
									</td>
									<td>${application.appGender }</td>
									<td>
										<a href="${pageContext.request.contextPath }/recruit/applicant/detail?appId=${application.appId}">
										    <button class="btn btn-primary">페이지</button>
										</a>
										<button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#applicationModal-${application.appId}">
											모달
										</button>
									</td>
									<td>
										<c:choose>
											<c:when test="${application.applicationStatus.currentStatus == '서류탈락' }">
												<button class="btn btn-danger btn-sm" style="width:90px;">서류탈락</button>
											</c:when>
											<c:when test="${application.applicationStatus.currentStatus == '면접예정' }">
												<button class="btn btn-warning btn-sm" style="width:90px;">면접예정</button>
											</c:when>
											<c:when test="${application.applicationStatus.currentStatus == '합격' }">
												<button class="btn btn-success btn-sm" style="width:90px;">합격</button>
											</c:when>
											<c:when test="${application.applicationStatus.currentStatus == '불합격' }">
												<button class="btn btn-danger btn-sm" style="width:90px;">불합격</button>
											</c:when>
											<c:otherwise>
												<!-- 그 외 상태일때는 일반텍스트로 표시 -->
												<span>${application.applicationStatus.currentStatus}</span>
											</c:otherwise>
										</c:choose>
									
									</td>
								</tr>
							</c:forEach>
						</c:when>
						<c:otherwise>
							<tr>
								<td colspan="5" class="text-center">지원서가 존재하지 않습니다.</td>
							</tr>
						</c:otherwise>
					</c:choose>
				</tbody>
			</table>
		</div>
	</div>
</section>
<!-- 지원서 상세 모달창 -->
<c:forEach items="${applicationList}" var="application">
    <div class="modal fade" id="applicationModal-${application.appId}" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title">지원서 상세 정보</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                <div class="container">
                <div class="card">
                <div class="card-body">
                    <ul class="list-group">
					    <li class="list-group-item"><strong>이름</strong> ${application.appName}</li>
					    <li class="list-group-item"><strong>성별</strong> ${application.appGender}</li>
					    <li class="list-group-item"><strong>생년월일</strong> 
					        ${fn:substring(application.appYeardate, 0, 4)}-${fn:substring(application.appYeardate, 4, 6)}-${fn:substring(application.appYeardate, 6, 8)}
					    </li>
					    <li class="list-group-item"><strong>이메일</strong> ${application.appEmail}</li>
					    <li class="list-group-item"><strong>학력</strong> ${application.appGrade}</li>
					    <li class="list-group-item"><strong>경력</strong> 
						    <span style="white-space: pre-line; display: block;">${application.appCareer}</span>
						</li>
					    <li class="list-group-item"><strong>자기소개서</strong> 
						    <span style="white-space: pre-line; display: block;">${application.appPl}</span>
						</li>
						<li class="list-group-item"><strong>평가상태</strong> 
							${application.applicationStatus.currentStatus}
					    	<c:if test="${application.applicationStatus.currentStatus eq '면접예정'}">
					    		<br>
					    		면접일 : ${fn:substringBefore(application.applicationStatus.interviewDate, ' ')}
					    	</c:if>
						</li>
					</ul>
                </div>
                </div>
                </div>
                
               	<!-- 상태 변경 폼 -->
				<form id="statusForm-${application.appId}" action="${pageContext.request.contextPath }/recruit/applicant/update" method="post">
					<input type="hidden" name="statusId" value="${application.applicationStatus.statusId}"> 
					<input type="hidden" name="appId" value="${application.appId}">
					<div class="status-container">
					    <label class="radio-label">
					        <input type="radio" name="currentStatus-${application.appId}" value="서류탈락" id="option1-${application.appId}"
					        ${application.applicationStatus.currentStatus eq '서류탈락' ? 'checked' : ''}>
					        서류탈락
					    </label>
					    
					    <label class="radio-label">
					        <input type="radio" name="currentStatus-${application.appId}" value="면접예정" id="option2-${application.appId}"
					        ${application.applicationStatus.currentStatus eq '면접예정' ? 'checked' : ''}>
					        면접예정
					    </label>
					    
					    <div id="datePickerContainer-${application.appId}" 
					         style="display: ${application.applicationStatus.currentStatus eq '면접예정' ? 'inline-block' : 'none'};">
					        <input type="date" class="form-control" id="interviewDate-${application.appId}" 
					               name="interviewDate" value="${application.applicationStatus.interviewDate}" 
					               style="width: 150px;">
					    </div>
					</div>
					
					
					<!-- 저장 및 닫기 버튼 -->
					<div class="d-flex justify-content-center" style="gap: 10px">
						<button type="button" class="btn btn-primary save-btn" data-app-id="${application.appId}">저장</button>
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="closeRecruitModal">
							닫기
						</button>
					</div>
					
				</form>
				</div>
			</div>
        </div>
    </div>
</c:forEach>

<script>
document.addEventListener("DOMContentLoaded", function () {
    function toggleDatePicker(appId) {
        let datePickerContainer = document.getElementById("datePickerContainer-" + appId);
        let isInterviewSelected = document.getElementById("option2-" + appId).checked;

        datePickerContainer.style.display = isInterviewSelected ? "inline-block" : "none";
    }

    // 상태 변경 시 날짜 필드 표시
    document.querySelectorAll("input[type='radio']").forEach(radio => {
        radio.addEventListener("change", function () {
            const appId = this.name.split("-")[1]; // appId 가져오기
            toggleDatePicker(appId);
        });
    });

    // 페이지 로드 시 기본 상태 설정
    document.querySelectorAll("[id^='datePickerContainer-']").forEach(container => {
        const appId = container.id.split("-")[1];
        toggleDatePicker(appId);
    });

    // 저장 버튼 클릭 시 데이터 전송 (axios 사용)
    document.querySelectorAll(".save-btn").forEach(button => {
        button.addEventListener("click", function () {
            const appId = this.dataset.appId;  // appId를 저장 버튼에 데이터 속성으로 저장
            const form = document.getElementById("statusForm-" + appId);  // form을 id로 찾기

            // 상태 및 면접일 값 가져오기
            const currentStatusRadio = form.querySelector("input[name='currentStatus-" + appId + "']:checked");
            if (!currentStatusRadio) {
                alert("상태를 선택해야 합니다.");
                return;
            }
            const currentStatus = currentStatusRadio.value;

            const interviewDateInput = form.querySelector("#interviewDate-" + appId);
            const interviewDateValue = interviewDateInput ? interviewDateInput.value : ""; // 날짜 필드 값 가져오기

            // 면접예정 상태일 때 날짜가 선택되었는지 확인
            if (currentStatus === "면접예정" && !interviewDateValue) {
                alert("면접일을 선택해야 합니다.");
                return; 
            }

            // axios로 데이터 전송
            axios.post("/recruit/applicant/update", {
                statusId: form.querySelector("input[name='statusId']").value,  // statusId 수정
                appId: appId,
                currentStatus: currentStatus,
                interviewDate: interviewDateValue 
            })
            .then(response => {
                alert(response.data.message);
                // 성공 후 모달 닫기 및 페이지 새로고침
                const modal = document.getElementById("applicationModal-" + appId);
                const modalInstance = bootstrap.Modal.getInstance(modal); 
                modalInstance.hide();
                location.reload();
            })
            .catch(error => {
                console.error("Error updating status:", error);
                alert("상태 업데이트 중 오류가 발생했습니다.");
            });
        });
    });
});

</script>


