<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>

<head>
  <title>조직도</title>
  <!-- FancyTree 스타일과 라이브러리 (glyph extension을 이용하려면 Font Awesome CSS 필요) -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jquery.fancytree/dist/skin-win8/ui.fancytree.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/jquery.fancytree/dist/jquery.fancytree-all-deps.min.js"></script>

  <style>
    .container {
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      gap: 20px;
    }
    .tree {
      width: 40%;
      font-family: '맑은 고딕', sans-serif;
      font-size: 14px;
    }
    /* 상세 정보 영역 스타일 */
    #detailPane {
      width: 50%;
      padding: 20px;
      border: 1px solid #ccc;
      background: #f9f9f9;
      display: none;
    }
  </style>
</head>
  <h1 style="text-align: center;">조직도</h1>
  <div class="container">
    <!-- 조직도 트리 영역 -->
    <div class="tree" id="orgTree"></div>
    <!-- 상세 정보 표시 영역 -->
    <div id="detailPane">
      <h2 id="detailTitle">상세정보</h2>
      <div id="detailContent"></div>
    </div>
  </div>
  <script>
    $(document).ready(function() {
      // AJAX 요청으로 부서 데이터를 조회합니다.
      $.ajax({
        url: '/employee/getDepartments',
        method: 'GET',
        dataType: 'json',
        success: function(response) {
          console.log("받은 응답:", response);
          // 응답 데이터가 배열인지 혹은 response.data로 전달되는지 확인 후 departmentList 추출
          var departmentList = Array.isArray(response) ? response : (response.data ? response.data : []);
          var orgData = processOrgData(departmentList);
          console.log("가공된 조직 데이터:", orgData);

          // FancyTree 초기화: glyph 옵션을 사용하여 기본 아이콘을 설정합니다.
          $("#orgTree").fancytree({
            glyph: {
              map: {
                // 기본 폴더 및 파일 아이콘을 Font Awesome 아이콘으로 설정
                expanderClosed: "fas fa-plus-square",   // 접혀 있을 때
                expanderOpen: "fas fa-minus-square",      // 펼쳐 있을 때
                folder: "fas fa-folder",                  // 폴더 아이콘 (일반 노드)
                folderOpen: "fas fa-folder-open",         // 폴더 펼쳐진 상태
                // 추가적으로 다른 아이콘 매핑도 가능
              }
            },
            source: orgData,
            activate: function(event, data) {
              console.log("클릭한 노드:", data.node);
              console.log("노드 데이터:", data.node.data);
              if (data.node.data && data.node.data.type === 'department') {
                $("#detailTitle").text("부서 정보");
                $("#detailContent").html(
                  "<p><strong>부서명:</strong> " + (data.node.data.departmentName || "") + "</p>" +
                  "<p><strong>부서 위치:</strong> " + (data.node.data.departmentLocation || "") + "</p>" +
                  "<p><strong>전화번호:</strong> " + (data.node.data.departmentPhonenumber || "") + "</p>" +
                  "<p><strong>팩스번호:</strong> " + (data.node.data.departmentFaxnumber || "") + "</p>"
                );
                $("#detailPane").show();
              } else if (data.node.data && data.node.data.type === 'team') {
                $("#detailTitle").text("팀 정보");
                $("#detailContent").html(
                  "<p><strong>팀명:</strong> " + (data.node.data.teamName || "") + "</p>" +
                  "<p><strong>전화번호:</strong> " + (data.node.data.teamPhonenumber || "") + "</p>" +
                  "<p><strong>팩스번호:</strong> " + (data.node.data.teamFaxnumber || "") + "</p>"
                );
                $("#detailPane").show();
              } else if (data.node.data && data.node.data.type === 'employee') {
                $("#detailTitle").text("직원 정보");
                $("#detailContent").html(
                  "<p><strong>이름:</strong> " + (data.node.title || "") + "</p>" +
                  "<p><strong>부서:</strong> " + (data.node.data.dept || "") + "</p>" +
                  "<p><strong>직위:</strong> " + (data.node.data.job || "") + "</p>" +
                  "<p><strong>이메일:</strong> " + (data.node.data.email || "") + "</p>" +
                  "<p><strong>전화번호:</strong> " + (data.node.data.phone || "") + "</p>" +
                  "<p><strong>주소:</strong> " + (data.node.data.address || "") + "</p>"
                );
                $("#detailPane").show();
              } else {
                $("#detailPane").hide();
              }
            }
          });
        },
        error: function(xhr, status, error) {
          console.error("Ajax 요청 실패:", status, error);
        }
      });

      // 부서 데이터를, 팀과 직원 데이터를 포함하는 계층구조(orgData)로 가공
      function processOrgData(departmentList) {
        var orgData = [];
        if (!Array.isArray(departmentList)) {
          console.error("departmentList 형식 오류:", departmentList);
          return orgData;
        }
        departmentList.forEach(function(dept) {
          // 부서 노드 생성: icon 속성을 사용해 개별 아이콘 지정 (예: 건물 아이콘)
          var deptNode = {
            title: dept.departmentName,
            folder: true,
            expanded: false,
            icon: "fas fa-building",  // 부서 아이콘 (Font Awesome)
            data: {
              type: 'department',
              departmentName: dept.departmentName,
              departmentLocation: dept.departmentLocation,
              departmentPhonenumber: dept.departmentPhonenumber,
              departmentFaxnumber: dept.departmentFaxnumber
            },
            children: []
          };

          // 부서에 팀이 있으면 처리
          if (dept.teams && Array.isArray(dept.teams)) {
            dept.teams.forEach(function(team) {
              // 팀 노드 생성: icon 속성을 사용해 팀 아이콘 지정
              var teamNode = {
                title: team.teamName,
                folder: true,
                expanded: false,
                icon: "fas fa-users",  // 팀 아이콘
                data: {
                  type: 'team',
                  teamName: team.teamName,
                  teamPhonenumber: team.teamPhonenumber,
                  teamFaxnumber: team.teamFaxnumber
                },
                children: []
              };

              // 팀에 속한 직원 정보 처리 (각 직원 노드에 type을 'employee'로 지정하고, 아이콘 추가)
              if (team.employees && Array.isArray(team.employees)) {
                team.employees.forEach(function(emp) {
                  teamNode.children.push({
                    title: emp.name,
                    icon: "fas fa-user",  // 직원 아이콘
                    data: {
                      type: 'employee',
                      dept: dept.departmentName,
                      job: (emp.job && emp.job.jobName) ? emp.job.jobName : "",
                      email: emp.email || "",
                      phone: emp.phoneNumber || "",
                      address: emp.address || ""
                    }
                  });
                });
              }

              // 팀 노드에 자식이 있다면 부서 노드에 추가
              if (teamNode.children.length > 0) {
                deptNode.children.push(teamNode);
              }
            });
          }

          // 부서에 직접 직원 정보가 있을 경우 처리
          if (dept.employees && Array.isArray(dept.employees)) {
            dept.employees.forEach(function(emp) {
              deptNode.children.push({
                title: emp.name,
                icon: "fas fa-user",  // 직원 아이콘
                data: {
                  type: 'employee',
                  dept: dept.departmentName,
                  job: (emp.job && emp.job.jobName) ? emp.job.jobName : "",
                  email: emp.email || "",
                  phone: emp.phoneNumber || "",
                  address: emp.address || ""
                }
              });
            });
          }

          // 자식 노드가 있는 부서만 orgData에 추가
          if (deptNode.children.length > 0) {
            orgData.push(deptNode);
          }
        });
        return orgData;
      }
    });
  </script>
