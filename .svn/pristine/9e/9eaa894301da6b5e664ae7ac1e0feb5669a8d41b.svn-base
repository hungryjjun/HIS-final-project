package kr.or.ddit.team.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.attendance.vo.AttendanceVO;
import kr.or.ddit.department.service.DepartmentService;
import kr.or.ddit.department.vo.DepartmentVO;
import kr.or.ddit.team.service.TeamService;
import kr.or.ddit.team.vo.TeamMemberVO;
import kr.or.ddit.team.vo.TeamVO;

@Controller
@RequestMapping("/team")
public class TeamUpdateController {

	@Autowired
    private TeamService service;

	@Autowired
	private DepartmentService deptservice;

	// 팀 수정 화면 표시 (팀 ID를 통해 기존 정보를 조회)
    @GetMapping("update")
    public String updateTeamForm(@RequestParam("teamId") Long teamId, Model model) {
    	// 팀 정보 조회
        TeamVO team = service.selectTeam(teamId);
        // 모든 부서 정보 조회
        List<DepartmentVO> departmentList = deptservice.getDepartmentList();


        model.addAttribute("team", team);
        model.addAttribute("departmentList", departmentList);


        return "tiles:team/teamUpdate";  // 수정 JSP 뷰 이름 (예: WEB-INF/views/team/teamUpdate.jsp)
    }

    // 팀 수정 처리 (POST)
    @PostMapping("update/commit")
    public String updateTeam(@ModelAttribute TeamVO team, RedirectAttributes redirectAttributes) {
        try {
//        	service.updateTeamWithMembers(team);
            redirectAttributes.addFlashAttribute("message", "팀이 성공적으로 수정되었습니다.");
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("errorMessage", "팀 수정 중 오류가 발생했습니다.");
        }
        return "redirect:/team/list";
    }


    @GetMapping("updateTeamMember")
    @ResponseBody
    public TeamVO updateTeamMember(TeamMemberVO teamMemVO) {
        System.out.println("Received TeamMemberVO: " + teamMemVO);  // 요청으로 받은 TeamMemberVO 객체 출력

        int cnt = service.insertTeamMembers(teamMemVO);  // 서비스 호출하여 cnt 값을 구함
        System.out.println("Returned cnt: " + cnt);  // 반환된 cnt 값을 출력

        TeamVO resultvo = new TeamVO();
        resultvo.setCnt(cnt);  // TeamVO에 cnt 값을 세팅

        return resultvo;  // 결과 반환
    }



}








