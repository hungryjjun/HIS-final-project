package kr.or.ddit.departmentboard.controller;

import java.io.File;
import java.io.IOException;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.account.vo.AccountVO;
import kr.or.ddit.board.vo.BoardVO;
import kr.or.ddit.departmentboard.service.DepartmentBoardService;
import kr.or.ddit.departmentboard.vo.DepartmentBoardVO;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;


@Controller
@RequestMapping("/departmentboard")
public class DepartmentBoardinsertController {
  
  @Inject
  private DepartmentBoardService service;

	@GetMapping("insert")
	public String DepartmentInsert(Model model) {
	  model.addAttribute("insert", new DepartmentBoardVO());
		return "tiles:departmentboard/departmentboardInsert";
	}
	
	@PostMapping("insert/commit")
  public String DepartmentInsert(HttpSession session,
      @ModelAttribute DepartmentBoardVO insert, Model model
  ) {
    AccountVO sessionAccount = (AccountVO) session.getAttribute("sessionAccount");
      
    if (sessionAccount != null) {
          // 로그인 된 계정의 부서ID를 추출
      insert.setDepartmentId(Long.parseLong(sessionAccount.getDepartmentId()));
      insert.setAuthor(sessionAccount.getAccountId());
          
      } else {
          // 세션에 sessionAccount가 없는 경우 처리
          model.addAttribute("error", "로그인 정보가 없습니다.");
          return "/account/accountLoginForm";
      }
    
 
      // 서비스 계층을 통해 데이터베이스에 저장
      service.boardInsert(insert);
    return "redirect:/departmentboard/list";
  }
	
	
	
}